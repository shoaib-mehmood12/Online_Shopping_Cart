@model IEnumerable<CategoryViewModel>

@{
    CategoryType type = ViewBag.type;//getting the type from the index action of the category controller by using the ViewBag.
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
    string msg = TempData["Notification"]?.ToString();
    string del = TempData["Delete"]?.ToString();
    string edit = TempData["Edit"]?.ToString();

}


<div class="row">
    <div class="col-md-12">
        <div class="card">
            <div class="card-body">
                <h4 class="card-title"> Details of @type
                </h4>
                <p class="card-description">
                    <div class="btn-group" role="group" aria-label="Basic example">
                    <a asp-action="Create" class=" btn btn-info  "> Create New </a>               @*access through the Url*@
                    <a asp-action="Create"  class=" btn-create-category btn btn-info "> Create New inline</a>        @*access through Inline*@ 
                          @foreach (CategoryType item in Enum.GetValues(typeof(CategoryType)))
                        {
                            @if(item!=type||true)
                            {
              
                            <a  href="/Categories?type=@item" class="btn btn-info">@item</a>
                            }
                            
                        }
                    </div>
                </p>
                @* why d-none because on reload page the loader is visible *@
                <div class="category-create-form">
                    <div class="form-area"></div>
                    <i class="fa fa-spin fa-spinner text-info d-none"></i>
                    </div>
                <table class="table action3">
                    <thead>
                        <tr>
                            <th>
                                @Html.DisplayNameFor(model => model.Name)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.Type)
                            </th>
                             <th title="CategoryWise | BrandWise">
                                 products
                             </th>

                            <th>
                                @Html.DisplayNameFor(model => model.Status)
                            </th>

                            <th>
                                Logo
                            </th>

                            <th></th>
                        </tr>
                    </thead>
                    <tbody>
                        
                        @foreach (var item in Model)
                        {

                            <tr>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Name)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Type)
                                </td>
                                   <td>
                                       <span class="Badge  bg-info text-white" style="padding-inline:7px;border-radius:5px; margin-left:10px">@item.CategoryWiseProducts</span>
                                    <span class="Badge bg-success text-White" style="padding-inline:7px;border-radius:5px">@item.BrandWiseProducts</span>
                                   </td>

                                <td>
                                    @if (item.Status == true)
                                    {
                                        <span class="badge bg-success  text-white">Active</span>
                                    }
                                    else
                                    {
                                        <span class="badge bg-danger text-white">Blocked</span>
                                    }
                                </td>

                                <td>
                               <img src="/@item.LogoUrl"  /> 
                                    
                                </td>

                                <td>
                                    <a asp-action="Edit" asp-route-id="@item.Id"class="fa fa-edit ml-2"></a>
                                    <a asp-action="Index" asp-controller="Products" asp-route-CategoryId="@item.Id" class="fa fa-eye text-success"></a>       @*the asp-route-CategoryId is same as we wrote inside the action(index)parameter*@
                                    <a asp-action="Delete" asp-route-id="@item.Id" class="fa fa-trash text-danger"></a>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>


@section js{
    <script>
        //s$(".category-create-form").hide();
        // e is basically some event in this case e is click events 
        $(".btn-create-category").click(function (e) {
             e.preventDefault();  // to stop the default behaviour of the create new Button(the default behaviour of the create is that it will have the hyperlink that will move the page to the new create page s in this line we are stopping this)
             //firstly we will get the response(page of the create)
             $(".category-create-form .fa-spinner").removeClass('d-none');// spinner will start displaying because we remove the d-none
             $.get('/Categories/Create?iar=true', function (res) {    // in response our Whole create page is stored and by using this res we will display the create page the index page
             $(".category-create-form .fa-spinner").addClass('d-none'); // spinner will stop displaying because we add the d-none
             $(".category-create-form .form-area").hide().html(res).slideDown(500); // sending the response data inside the div which name is category-create-form so the form will display inside the div and above the index table when we click on Create new button on the index view.
                           
            })
        });
    </script>

                                                 @* Notification section *@
            @* Create category notification  *@
        @if (TempData["Notification"] != null)
        {
          <script>
                Swal.fire({
                    position: 'center',
                    icon: 'success',
                    title: '@msg created',
                    showConfirmButton: false,
                    timer: 1500
                })u
        </script>

        }
        @* Delete category notification *@
        @if (TempData["Delete"] != null)
        {
        <script>
            Swal.fire({
                position: 'center',
                icon: 'success',
                title: '@del',
                showConfirmButton: false,
                timer: 1500
            })
        </script>

        }
        @* edit notificaiton *@
        @if (TempData["Edit"] != null)
        {
        <script>
            Swal.fire({
                position: 'center',
                icon: 'success',
                title: '@edit Updated',
                showConfirmButton: false,
                timer: 1500
            })
        </script>

        }

}



