@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_ClientLayout.cshtml";
}
<div class="cart_section" id="cartApp">
    <div class="container">
        <div class="row">
            <div class="col-lg-10 offset-lg-1">
                <div class="cart_container">
                    <div class="cart_title">Shopping Cart</div>
                    <template v-if="loaders.cart">
                        <span class="fa fa-spin fa-spinner fa-3x"></span>
                    </template>
                    <template v-if="cartList.length">
                        <div class="cart_items" v-for="ci in cartList">
                            <ul class="cart_list">
                                <li class="cart_item clearfix">
                                    <div class="cart_item_image">
                                        <img :src="`/${ci.imageUrl}`" alt="" style="height: 7em; margin-top:19px; margin-left:32px;">
                                    </div>
                                    <div class="cart_item_info d-flex flex-md-row flex-column justify-content-between">
                                        <div class="cart_item_name cart_info_col">
                                            <div class="cart_item_title">{{ci.categoryName}}</div>
                                            <div class="cart_item_text">{{ci.name}}</div>
                                        </div>
                                        <div class="cart_item_quantity cart_info_col">
                                            <div class="cart_item_title">Quantity</div>
                                            <div class="cart_item_text">

                                                <input type="number" style="width:60px" v-model="ci.qty" :disabled="!ci.editMode" />

                                            </div>
                                        </div>
                                        <div class="cart_item_price cart_info_col">
                                            <div class="cart_item_title">Unit Price</div>
                                            <div class="cart_item_text">Rs.{{ci.price}}</div>
                                        </div>
                                        <div class="cart_item_total cart_info_col">
                                            <div class="cart_item_title">Total Price</div>
                                            <div class="cart_item_text">Rs.{{ci.price*ci.qty}}</div>
                                        </div>
                                        <div class="cart_item_total cart_info_col mt-4">
                                            <template v-if="!ci.loader">

                                                <span @@click="updateCart(ci)" v-if="ci.editMode" class="fa fa-save text-info fa-2x"></span>
                                                <span @@click="ci.editMode = true" v-else class="fa fa-edit fa-2x text-info "></span>
                                                &nbsp;
                                                <span v-if="!ci.deleteMode" class="fa fa-trash fa-2x text-danger" @@click="ci.deleteMode=true"></span>
                                                <span v-else class="fa fa-trash-alt fa-2x text-danger" @@click="deleteItem(ci)"></span>

                                            </template>
                                            <template v-else>
                                                <span class="fa fa-spin  fa-2x fa-spinner text-info"></span>
                                            </template>
                                        </div>
                                    </div>
                                </li>
                            </ul>
                        </div>

                        <!-- Order Total -->
                        <div class="order_total col-md-4 ">
                            <div class="order_total_content text-md-right">
                                <div class="order_total_title">Order Total:</div>
                                <div class="order_total_amount">Rs. {{cartList.map(m=>m.qty*m.price).reduce((a,b)=>a+b,0)}}</div>
                            </div>
                        </div>
                    </template>
                    <template v-else>
                        <h3> no item in the cart</h3>
                    </template>

                    <div class="cart_buttons">
                        <button type="button" class="button cart_button_clear" onclick="window.location.href='/Home'">Back to Shop	</button>
                        <a href="/checkout" class="button cart_button_checkout ">Checkout</a>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section js{
    <script>
        var cartIconApp = Vue.createApp({
            data() {
                return {
                    //objects
                    cartList: [], // revieve the items that were added in cartApp.cartList
                }
            }
        }).mount("#cartIconApp");
        var cartApp = Vue.createApp({
            data() {
                return {
                    //objects
                    cartList: [], // i want to revieve the items that were added in cart
                    loaders: {
                        cart: true
                    }
                }
            },
            methods: {
                //inside the paramaters we are sending the id of the product that is added
                addToCart: function (id) {
                    if (!this.isLoggedIn) {
                        window.location.assign('/login');
                    }
                    $.post('/cart/AddOrUpdateCart', { id: id }, function (res) {
                        if (res.status) {
                            //adding the result inside the cart list
                            cartApp.cartList = res.data;// send the response of the products reference: inside the cartController we have aciton AddOrUpdatecart and inside this aciton we have the result stored in the data return
                            cartIconApp.cartList = res.data;//sending the list of the products to the cartIconApp below
                        }
                    });
                },
                loadCart: function () {
                    this.loaders.cart = true;
                    $.post('/cart/GetCartItems', function (res) {
                        if (res.status) {
                            cartApp.loaders.cart = false;
                            res.data.forEach(m => m.loader = false);
                            res.data.forEach(m => m.editMode = false);
                            res.data.forEach(m => m.deleteMode = false);
                            //adding the result inside the cart list
                            cartApp.cartList = res.data;// send the response of the products reference: inside the cartController we have aciton AddOrUpdatecart and inside this aciton we have the result stored in the data return

                        }
                    });

                },
                updateCart: function (ci) {
                    ci.editMode = false;
                    ci.loader = true;
                    $.post('/Cart/AddOrUpdateCart', { id: ci.productId, qty: ci.qty, isUpdate: true }, function (res) {
                        if (res.status) {
                            res.data.forEach(m => m.loader = false);
                            res.data.forEach(m => m.editMode = false);
                            //adding the result inside the cart list
                            cartApp.cartList = res.data;// send the response of the products reference: inside the cartController we have aciton AddOrUpdatecart and inside this aciton we have the result stored in the data return
                            cartIconApp.cartList = res.data;
                        }
                    })
                },
                deleteItem: function (ci) {

                    ci.loader = true;
                    $.post('/Cart/DeleteItem', { id: ci.productId }, function (res) {
                        if (res.status) {
                            cartApp.cartList = cartApp.cartList.filter(m => m.productId != ci.productId);
                            cartIconApp.cartList = cartApp.cartList.filter(m => m.productId != ci.productId);
                        }
                    })
                }
            },
            created() {
                this.loadCart();
                console.log('created')
            },
            updated() {
                console.log('updated')
            }

        }).mount("#cartApp");

    </script>
}
@section css{
    <link rel="stylesheet" type="text/css" href="styles/cart_styles.css">
    <link rel="stylesheet" type="text/css" href="styles/cart_responsive.css">
    <style>
        .cart_items {
            margin-top: -0em;
        }

    </style>
}